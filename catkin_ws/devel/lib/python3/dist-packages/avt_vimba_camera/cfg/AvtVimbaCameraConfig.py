## *********************************************************
##
## File autogenerated for the avt_vimba_camera package
## by the dynamic_reconfigure package.
## Please do not edit.
##
## ********************************************************/

from dynamic_reconfigure.encoding import extract_params

inf = float('inf')

config_description = {'name': 'Default', 'type': '', 'state': True, 'cstate': 'true', 'id': 0, 'parent': 0, 'parameters': [{'name': 'acquisition_mode', 'type': 'str', 'default': 'Continuous', 'level': 1, 'description': 'Camera acquisition mode', 'min': '', 'max': '', 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': "{'enum': [{'name': 'Continuous', 'type': 'str', 'value': 'Continuous', 'srcline': 46, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': 'After an acquisition start event, the camera will continuously receive frame trigger events.', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'SingleFrame', 'type': 'str', 'value': 'SingleFrame', 'srcline': 47, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': 'The camera will only deliver a single frame trigger event', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'MultiFrame', 'type': 'str', 'value': 'MultiFrame', 'srcline': 48, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': 'The camera will acquire the number of images specified by `~AcquisitionFrameCount`. Further trigger events will be ignored', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'Recorder', 'type': 'str', 'value': 'Recorder', 'srcline': 49, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': 'The camera will continuously record images into the camera on-board memory', 'ctype': 'std::string', 'cconsttype': 'const char * const'}], 'enum_description': 'Set Trigger Mode'}", 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'acquisition_rate', 'type': 'double', 'default': 10.0, 'level': 0, 'description': 'Sets the expected triggering rate in externally triggered mode.', 'min': 1.0, 'max': 35.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'acquisition_rate_enable', 'type': 'bool', 'default': False, 'level': 0, 'description': 'Allows to fix acquisition rate, if available', 'min': False, 'max': True, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'trigger_source', 'type': 'str', 'default': 'FixedRate', 'level': 1, 'description': 'Camera trigger source', 'min': '', 'max': '', 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': "{'enum': [{'name': 'Freerun', 'type': 'str', 'value': 'Freerun', 'srcline': 13, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': 'Run at maximum frame rate', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'Line0', 'type': 'str', 'value': 'Line0', 'srcline': 14, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': 'External trigger on SyncIn0/Line0 line', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'Line1', 'type': 'str', 'value': 'Line1', 'srcline': 15, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': 'External trigger on SyncIn1/Line1 line', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'Line2', 'type': 'str', 'value': 'Line2', 'srcline': 16, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': 'External trigger on SyncIn2/Line2 line', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'Line3', 'type': 'str', 'value': 'Line3', 'srcline': 17, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': 'External trigger on SyncIn3/Line3 line', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'Line4', 'type': 'str', 'value': 'Line4', 'srcline': 18, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': 'External trigger on SyncIn4 line', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'FixedRate', 'type': 'str', 'value': 'FixedRate', 'srcline': 19, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': 'Camera self-triggers at a fixed frame rate defined by `~AcquisitionFrameRateAbs`', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'Software', 'type': 'str', 'value': 'Software', 'srcline': 20, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': 'Software inititated image capture', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'Action0', 'type': 'str', 'value': 'Action0', 'srcline': 21, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': 'Trigger over ethernet action0', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'Action1', 'type': 'str', 'value': 'Action1', 'srcline': 22, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': 'Trigger over ethernet action1', 'ctype': 'std::string', 'cconsttype': 'const char * const'}], 'enum_description': 'Set Trigger Mode'}", 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'trigger_mode', 'type': 'str', 'default': 'On', 'level': 1, 'description': 'Camera trigger mode', 'min': '', 'max': '', 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': "{'enum': [{'name': 'ModeOn', 'type': 'str', 'value': 'On', 'srcline': 34, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'ModeOff', 'type': 'str', 'value': 'Off', 'srcline': 35, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}], 'enum_description': 'Trigger mode'}", 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'trigger_selector', 'type': 'str', 'default': 'FrameStart', 'level': 1, 'description': 'Camera trigger selector', 'min': '', 'max': '', 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': "{'enum': [{'name': 'FrameStart', 'type': 'str', 'value': 'FrameStart', 'srcline': 39, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'AcquisitionStart', 'type': 'str', 'value': 'AcquisitionStart', 'srcline': 40, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'AcquisitionEnd', 'type': 'str', 'value': 'AcquisitionEnd', 'srcline': 41, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'AcquisitionRecord', 'type': 'str', 'value': 'AcquisitionRecord', 'srcline': 42, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}], 'enum_description': 'Trigger activation selector'}", 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'trigger_activation', 'type': 'str', 'default': 'RisingEdge', 'level': 1, 'description': 'Camera trigger activation', 'min': '', 'max': '', 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': "{'enum': [{'name': 'RisingEdge', 'type': 'str', 'value': 'RisingEdge', 'srcline': 26, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'FallingEdge', 'type': 'str', 'value': 'FallingEdge', 'srcline': 27, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'AnyEdge', 'type': 'str', 'value': 'AnyEdge', 'srcline': 28, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'LevelHigh', 'type': 'str', 'value': 'LevelHigh', 'srcline': 29, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'LevelLow', 'type': 'str', 'value': 'LevelLow', 'srcline': 30, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}], 'enum_description': 'Set Automatic Control'}", 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'trigger_delay', 'type': 'double', 'default': 0.0, 'level': 0, 'description': 'Trigger delay in us (only valid when set to external trigger)', 'min': 0.0, 'max': 60000000.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'action_device_key', 'type': 'int', 'default': 1, 'level': 1, 'description': 'Camera action device key', 'min': 1, 'max': 4294967295, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'action_group_key', 'type': 'int', 'default': 1, 'level': 1, 'description': 'Camera action group key', 'min': 1, 'max': 4294967295, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'action_group_mask', 'type': 'int', 'default': 1, 'level': 1, 'description': 'Camera action group mask', 'min': 1, 'max': 4294967295, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'exposure', 'type': 'double', 'default': 50000.0, 'level': 0, 'description': 'Camera exposure time in microseconds.', 'min': 41.0, 'max': 60000000.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'exposure_auto', 'type': 'str', 'default': 'Continuous', 'level': 0, 'description': 'Sets the camera exposure. If continously automatic, causes the `~exposure` setting to be ignored.', 'min': '', 'max': '', 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': "{'enum': [{'name': 'Off', 'type': 'str', 'value': 'Off', 'srcline': 84, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'Once', 'type': 'str', 'value': 'Once', 'srcline': 85, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'Auto', 'type': 'str', 'value': 'Continuous', 'srcline': 86, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}], 'enum_description': 'Set Automatic Control'}", 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'exposure_auto_alg', 'type': 'str', 'default': 'FitRange', 'level': 0, 'description': 'The following algorithms can be used to calculate auto exposure', 'min': '', 'max': '', 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': "{'enum': [{'name': 'Mean', 'type': 'str', 'value': 'Mean', 'srcline': 146, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '[Default] The arithmetic mean of the histogram of the current image is compared to ExposureAutoTarget, and the next image adjusted in exposure time to meet this target. Bright areas are allowed to saturate', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'FitRange', 'type': 'str', 'value': 'FitRange', 'srcline': 147, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': 'The histogram of the current image is measured, and the exposure time of the next image is adjusted so bright areas are not saturated', 'ctype': 'std::string', 'cconsttype': 'const char * const'}], 'enum_description': 'The following algorithms can be used to calculate auto exposure'}", 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'exposure_auto_tol', 'type': 'int', 'default': 5, 'level': 0, 'description': 'Tolerance in variation from ExposureAutoTarget in which the auto exposure algorithm will not respond.', 'min': 0, 'max': 50, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'exposure_auto_max', 'type': 'int', 'default': 50000, 'level': 0, 'description': 'The max exposure time in auto exposure mode, in microseconds.', 'min': 29, 'max': 85899341, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'exposure_auto_min', 'type': 'int', 'default': 45, 'level': 0, 'description': 'The min exposure time in auto exposure mode, in microseconds.', 'min': 29, 'max': 85899341, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'exposure_auto_outliers', 'type': 'int', 'default': 0, 'level': 0, 'description': 'The total pixels from top of the distribution that are ignored by the auto exposure algorithm (0.01% increments)', 'min': 0, 'max': 10000, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'exposure_auto_rate', 'type': 'int', 'default': 100, 'level': 0, 'description': 'The rate at which the auto exposure function changes the exposure setting.100% is auto exposure adjustments running at full speed, and 50% is half speed.', 'min': 1, 'max': 100, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'exposure_auto_target', 'type': 'int', 'default': 50, 'level': 0, 'description': 'The auto exposure target mean value as a percentage, from 0=black to 100=white.', 'min': 0, 'max': 100, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'exposure_mode', 'type': 'str', 'default': 'Timed', 'level': 0, 'description': 'The control for exposure duration.', 'min': '', 'max': '', 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': "{'enum': [{'name': 'Timed', 'type': 'str', 'value': 'Timed', 'srcline': 151, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '[Default] Camera exposure time is set by ExposureTimeAbs.', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'TriggerWidth', 'type': 'str', 'value': 'TriggerWidth', 'srcline': 152, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': 'Camera exposure time is controlled by external trigger pulse on Line1 or Line2. In order for this feature to work, TriggerSelector = FrameStart and TriggerSource must be set to Line1 or Line2.', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'PieceWiseLinearHDR', 'type': 'str', 'value': 'PieceWiseLinearHDR', 'srcline': 153, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': 'Image dynamic range is increased in difficult lighting situations by clamping down bright pixels with light levels beyond ThresholdPWL limits. Overall camera exposure time is set by ExposureTimeAbs. HDR sub-exposures are set using ExposureTimePWL1 and ExposureTimePWL2.', 'ctype': 'std::string', 'cconsttype': 'const char * const'}], 'enum_description': 'description'}", 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'exposure_time_PWL1', 'type': 'double', 'default': 50000.0, 'level': 0, 'description': 'Exposure time after ThresholdPWL1 is reached.', 'min': 41.0, 'max': 60000000.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'exposure_time_PWL2', 'type': 'double', 'default': 50000.0, 'level': 0, 'description': 'Exposure time after ThresholdPWL2 is reached.', 'min': 41.0, 'max': 60000000.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'exposure_threshold_PWL1', 'type': 'int', 'default': 63, 'level': 0, 'description': 'The first and highest threshold level in PieceWiseLinearHDR. Leaving ThresholdPWL1 at 63 disables PieceWiseLinearHDR.', 'min': 0, 'max': 63, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'exposure_threshold_PWL2', 'type': 'int', 'default': 63, 'level': 0, 'description': 'The second and lowest threshold level in PieceWiseLinearHDR. Leaving ThresholdPWL1 at 63 disables PieceWiseLinearHDR.', 'min': 0, 'max': 63, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'gain', 'type': 'double', 'default': 0.0, 'level': 0, 'description': 'The gain level in dB.', 'min': 0.0, 'max': 40.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'gain_auto', 'type': 'str', 'default': 'Continuous', 'level': 0, 'description': 'Sets the analog gain. If continously automatic, causes the `~gain` setting to be ignored.', 'min': '', 'max': '', 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': "{'enum': [{'name': 'Off', 'type': 'str', 'value': 'Off', 'srcline': 84, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'Once', 'type': 'str', 'value': 'Once', 'srcline': 85, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'Auto', 'type': 'str', 'value': 'Continuous', 'srcline': 86, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}], 'enum_description': 'Set Automatic Control'}", 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'gain_auto_adjust_tol', 'type': 'int', 'default': 5, 'level': 0, 'description': 'Tolerance in variation from GainAutoTarget in which the auto exposure algorithm will not respond.', 'min': 0, 'max': 50, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'gain_auto_max', 'type': 'double', 'default': 32.0, 'level': 0, 'description': 'The max gain level in auto gain mode, in dB.', 'min': 0.0, 'max': 40.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'gain_auto_min', 'type': 'double', 'default': 0.0, 'level': 0, 'description': 'The min gain level in auto gain mode, in dB.', 'min': 0.0, 'max': 40.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'gain_auto_outliers', 'type': 'int', 'default': 0, 'level': 0, 'description': 'The total pixels from top of the distribution that are ignored by the auto gain algorithm (0.01% increments).', 'min': 0, 'max': 10000, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'gain_auto_rate', 'type': 'int', 'default': 50, 'level': 0, 'description': 'The rate percentage at which the auto gain function changes.', 'min': 1, 'max': 100, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'gain_auto_target', 'type': 'int', 'default': 50, 'level': 0, 'description': 'The general lightness or darkness of the auto gain feature. A percentage of maximum brightness.', 'min': 0, 'max': 100, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'balance_ratio_abs', 'type': 'double', 'default': 1.0, 'level': 0, 'description': 'Adjusts the gain of the channel selected in the `~BalanceRatioSelector`', 'min': 0.25, 'max': 4.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'balance_ratio_selector', 'type': 'str', 'default': 'Red', 'level': 0, 'description': 'Select the Red or Blue channel to adjust with `~BalanceRatioAbs`', 'min': '', 'max': '', 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': "{'enum': [{'name': 'Red', 'type': 'str', 'value': 'Red', 'srcline': 90, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'Blue', 'type': 'str', 'value': 'Blue', 'srcline': 91, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}], 'enum_description': 'Select the Red or Blue channel to adjust with `~BalanceRatioAbs`'}", 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'whitebalance_auto', 'type': 'str', 'default': 'Continuous', 'level': 0, 'description': 'Whether whitebalance will continuously adjust to the current scene. Causes the `~whitebalance_red` and `~whitebalance_blue` settings to be ignored.', 'min': '', 'max': '', 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': "{'enum': [{'name': 'Off', 'type': 'str', 'value': 'Off', 'srcline': 84, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'Once', 'type': 'str', 'value': 'Once', 'srcline': 85, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'Auto', 'type': 'str', 'value': 'Continuous', 'srcline': 86, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}], 'enum_description': 'Set Automatic Control'}", 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'whitebalance_auto_tol', 'type': 'int', 'default': 5, 'level': 0, 'description': 'Tolerance allowed from the ideal white balance values', 'min': 0, 'max': 50, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'whitebalance_auto_rate', 'type': 'int', 'default': 100, 'level': 0, 'description': 'Rate of white balance adjustments, from 1 (slowest) to 100 (fastest).', 'min': 1, 'max': 100, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'gamma', 'type': 'double', 'default': 0.45, 'level': 0, 'description': 'Controls the gamma correction of pixel intensity.', 'min': 0.25, 'max': 4.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'subregion_bottom', 'type': 'int', 'default': 1088, 'level': 0, 'description': 'Area which is used for measurements in AUTO functions e.g. auto_exposure. Defines the bottom edge of the subregion.', 'min': 1, 'max': 1088, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'subregion_top', 'type': 'int', 'default': 0, 'level': 0, 'description': 'Area which is used for measurements in AUTO functions e.g. auto_exposure. Defines the top edge of the subregion.', 'min': 0, 'max': 1088, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'subregion_right', 'type': 'int', 'default': 2048, 'level': 0, 'description': 'Area which is used for measurements in AUTO functions e.g. auto_exposure. Defines the right edge of the subregion.', 'min': 1, 'max': 2048, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'subregion_left', 'type': 'int', 'default': 0, 'level': 0, 'description': 'Area which is used for measurements in AUTO functions e.g. auto_exposure. Defines the left edge of the subregion.', 'min': 0, 'max': 2048, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'binning_x', 'type': 'int', 'default': 1, 'level': 0, 'description': 'Number of pixels to bin together horizontally.', 'min': 1, 'max': 8, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'binning_y', 'type': 'int', 'default': 1, 'level': 0, 'description': 'Number of pixels to bin together vertically.', 'min': 1, 'max': 14, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'decimation_x', 'type': 'int', 'default': 1, 'level': 0, 'description': 'Number of decimation operations in x.', 'min': 1, 'max': 8, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'decimation_y', 'type': 'int', 'default': 1, 'level': 0, 'description': 'Number of decimation operations in y.', 'min': 1, 'max': 8, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'reverse_x', 'type': 'bool', 'default': False, 'level': 0, 'description': 'If True, it will flip the image along X-Axis Horizontally', 'min': False, 'max': True, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'reverse_y', 'type': 'bool', 'default': False, 'level': 0, 'description': 'If True, it will flip the image along Y-Axis Vertically', 'min': False, 'max': True, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'width', 'type': 'int', 'default': 4096, 'level': 0, 'description': 'Width of the region of interest (0 for automatic).', 'min': 4, 'max': 4096, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'height', 'type': 'int', 'default': 4096, 'level': 0, 'description': 'Height of the region of interest (0 for automatic).', 'min': 4, 'max': 4096, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'offset_x', 'type': 'int', 'default': 0, 'level': 0, 'description': 'X offset of the region of interest.', 'min': 0, 'max': 4095, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'offset_y', 'type': 'int', 'default': 0, 'level': 0, 'description': 'Y offset of the region of interest.', 'min': 0, 'max': 4095, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'pixel_format', 'type': 'str', 'default': 'Mono8', 'level': 3, 'description': 'Format of the image data.', 'min': '', 'max': '', 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': "{'enum': [{'name': 'Mono8', 'type': 'str', 'value': 'Mono8', 'srcline': 54, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'Mono10', 'type': 'str', 'value': 'Mono10', 'srcline': 55, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'Mono10Packed', 'type': 'str', 'value': 'Mono10Packed', 'srcline': 56, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'Mono12', 'type': 'str', 'value': 'Mono12', 'srcline': 57, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'Mono12Packed', 'type': 'str', 'value': 'Mono12Packed', 'srcline': 58, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'BayerGR8', 'type': 'str', 'value': 'BayerGR8', 'srcline': 59, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'BayerRG8', 'type': 'str', 'value': 'BayerRG8', 'srcline': 60, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'BayerGB8', 'type': 'str', 'value': 'BayerGB8', 'srcline': 61, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'BayerBG8', 'type': 'str', 'value': 'BayerBG8', 'srcline': 62, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'BayerGR10', 'type': 'str', 'value': 'BayerGR10', 'srcline': 63, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'BayerRG10', 'type': 'str', 'value': 'BayerRG10', 'srcline': 64, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'BayerGB10', 'type': 'str', 'value': 'BayerGB10', 'srcline': 65, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'BayerBG10', 'type': 'str', 'value': 'BayerBG10', 'srcline': 66, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'BayerGR12', 'type': 'str', 'value': 'BayerGR12', 'srcline': 67, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'BayerRG12', 'type': 'str', 'value': 'BayerRG12', 'srcline': 68, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'BayerGB12', 'type': 'str', 'value': 'BayerGB12', 'srcline': 69, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'BayerBG12', 'type': 'str', 'value': 'BayerBG12', 'srcline': 70, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'BayerGR10Packed', 'type': 'str', 'value': 'BayerGR10Packed', 'srcline': 71, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'BayerRG10Packed', 'type': 'str', 'value': 'BayerRG10Packed', 'srcline': 72, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'BayerGB10Packed', 'type': 'str', 'value': 'BayerGB10Packed', 'srcline': 73, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'BayerBG10Packed', 'type': 'str', 'value': 'BayerBG10Packed', 'srcline': 74, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'BayerGR12Packed', 'type': 'str', 'value': 'BayerGR12Packed', 'srcline': 75, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'BayerRG12Packed', 'type': 'str', 'value': 'BayerRG12Packed', 'srcline': 76, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'BayerGB12Packed', 'type': 'str', 'value': 'BayerGB12Packed', 'srcline': 77, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'BayerBG12Packed', 'type': 'str', 'value': 'BayerBG12Packed', 'srcline': 78, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'RGB8Packed', 'type': 'str', 'value': 'RGB8Packed', 'srcline': 79, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'BGR8Packed', 'type': 'str', 'value': 'BGR8Packed', 'srcline': 80, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}], 'enum_description': 'Set Pixel Format'}", 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'stream_bytes_per_second', 'type': 'int', 'default': 124000000, 'level': 0, 'description': 'Limits the data rate of the camera.', 'min': 1, 'max': 125000000, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'ptp_mode', 'type': 'str', 'default': 'Off', 'level': 0, 'description': 'Controls the PTP behavior of the clock port.', 'min': '', 'max': '', 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': "{'enum': [{'name': 'PtpOff', 'type': 'str', 'value': 'Off', 'srcline': 100, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'PtpSlave', 'type': 'str', 'value': 'Slave', 'srcline': 101, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'PtpMaster', 'type': 'str', 'value': 'Master', 'srcline': 102, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'PtpAuto', 'type': 'str', 'value': 'Auto', 'srcline': 103, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}], 'enum_description': 'Select PrecissionTimeProtocol Mode'}", 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'sync_in_selector', 'type': 'str', 'default': 'SyncIn1', 'level': 1, 'description': 'Selects the sync-out line to control', 'min': '', 'max': '', 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': "{'enum': [{'name': 'SyncIn1', 'type': 'str', 'value': 'SyncIn1', 'srcline': 107, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'SyncIn2', 'type': 'str', 'value': 'SyncIn2', 'srcline': 108, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'SyncIn3', 'type': 'str', 'value': 'SyncIn3', 'srcline': 109, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'SyncIn4', 'type': 'str', 'value': 'SyncIn4', 'srcline': 110, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}], 'enum_description': 'Sync-in selector'}", 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'sync_out_polarity', 'type': 'str', 'default': 'Normal', 'level': 1, 'description': 'Polarity applied to the sync-out line specified by `sync_out_selector`', 'min': '', 'max': '', 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': "{'enum': [{'name': 'Normal', 'type': 'str', 'value': 'Normal', 'srcline': 95, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'Invert', 'type': 'str', 'value': 'Invert', 'srcline': 96, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}], 'enum_description': 'Polarity'}", 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'sync_out_selector', 'type': 'str', 'default': 'SyncOut1', 'level': 1, 'description': 'Selects the sync-out line to control', 'min': '', 'max': '', 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': "{'enum': [{'name': 'SyncOut1', 'type': 'str', 'value': 'SyncOut1', 'srcline': 114, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'SyncOut2', 'type': 'str', 'value': 'SyncOut2', 'srcline': 115, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'SyncOut3', 'type': 'str', 'value': 'SyncOut3', 'srcline': 116, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'SyncOut4', 'type': 'str', 'value': 'SyncOut4', 'srcline': 117, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}], 'enum_description': 'Sync-out selector'}", 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'sync_out_source', 'type': 'str', 'default': 'GPO', 'level': 1, 'description': 'Signal source of the sync-out line specified by `sync_out_selector`', 'min': '', 'max': '', 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': "{'enum': [{'name': 'GPO', 'type': 'str', 'value': 'GPO', 'srcline': 121, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'AcquisitionTriggerReady', 'type': 'str', 'value': 'AcquisitionTriggerReady', 'srcline': 122, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'FrameTriggerReady', 'type': 'str', 'value': 'FrameTriggerReady', 'srcline': 123, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'FrameTrigger', 'type': 'str', 'value': 'FrameTrigger', 'srcline': 124, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'Exposing', 'type': 'str', 'value': 'Exposing', 'srcline': 125, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'FrameReadout', 'type': 'str', 'value': 'FrameReadout', 'srcline': 126, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'Imaging', 'type': 'str', 'value': 'Imaging', 'srcline': 127, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'Acquiring', 'type': 'str', 'value': 'Acquiring', 'srcline': 128, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'LineIn1', 'type': 'str', 'value': 'LineIn1', 'srcline': 129, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'LineIn2', 'type': 'str', 'value': 'LineIn2', 'srcline': 130, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}], 'enum_description': 'Sync-out signal'}", 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'line_selector', 'type': 'str', 'default': 'Line0', 'level': 1, 'description': 'Selects the line to control', 'min': '', 'max': '', 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': "{'enum': [{'name': 'USBLine0', 'type': 'str', 'value': 'Line0', 'srcline': 134, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'USBLine1', 'type': 'str', 'value': 'Line1', 'srcline': 135, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'USBLine2', 'type': 'str', 'value': 'Line2', 'srcline': 136, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'USBLine3', 'type': 'str', 'value': 'Line3', 'srcline': 137, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}], 'enum_description': 'Line selector'}", 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'line_mode', 'type': 'str', 'default': 'Input', 'level': 1, 'description': 'Controls the mode of the line specified by `line_selector`', 'min': '', 'max': '', 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': "{'enum': [{'name': 'Output', 'type': 'str', 'value': 'Output', 'srcline': 141, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'Input', 'type': 'str', 'value': 'Input', 'srcline': 142, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}], 'enum_description': 'Line mode'}", 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'iris_auto_target', 'type': 'int', 'default': 50, 'level': 0, 'description': 'This is the target image mean value, in percent.', 'min': 0, 'max': 100, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'iris_mode', 'type': 'str', 'default': 'Continuous', 'level': 0, 'description': 'Set the iris mode. Disabled: no iris control. Video: enable video iris. VideoOpen: fully open a video iris. VideoClose: fully close a video iris.', 'min': '', 'max': '', 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': "{'enum': [{'name': 'Off', 'type': 'str', 'value': 'Off', 'srcline': 84, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'Once', 'type': 'str', 'value': 'Once', 'srcline': 85, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'Auto', 'type': 'str', 'value': 'Continuous', 'srcline': 86, 'srcfile': '/home/artur/PycharmProjects/2042_sensor_testing/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'description': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}], 'enum_description': 'Set Automatic Control'}", 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'iris_video_level_min', 'type': 'int', 'default': 110, 'level': 0, 'description': 'Minimum video iris level output by the camera, in approximately mV pp. A higher minimum value slows the adjustment time but prevents excessive overshoot.', 'min': 0, 'max': 150, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'iris_video_level_max', 'type': 'int', 'default': 110, 'level': 0, 'description': 'Maximum video iris level output by the camera, in approximately mV pp. A lower minimum value slows the adjustment time but prevents excessive overshoot.', 'min': 0, 'max': 150, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}], 'groups': [], 'srcline': 246, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'class': 'DEFAULT', 'parentclass': '', 'parentname': 'Default', 'field': 'default', 'upper': 'DEFAULT', 'lower': 'groups'}

min = {}
max = {}
defaults = {}
level = {}
type = {}
all_level = 0

#def extract_params(config):
#    params = []
#    params.extend(config['parameters'])
#    for group in config['groups']:
#        params.extend(extract_params(group))
#    return params

for param in extract_params(config_description):
    min[param['name']] = param['min']
    max[param['name']] = param['max']
    defaults[param['name']] = param['default']
    level[param['name']] = param['level']
    type[param['name']] = param['type']
    all_level = all_level | param['level']

AvtVimbaCamera_Freerun = 'Freerun'
AvtVimbaCamera_Line0 = 'Line0'
AvtVimbaCamera_Line1 = 'Line1'
AvtVimbaCamera_Line2 = 'Line2'
AvtVimbaCamera_Line3 = 'Line3'
AvtVimbaCamera_Line4 = 'Line4'
AvtVimbaCamera_FixedRate = 'FixedRate'
AvtVimbaCamera_Software = 'Software'
AvtVimbaCamera_Action0 = 'Action0'
AvtVimbaCamera_Action1 = 'Action1'
AvtVimbaCamera_RisingEdge = 'RisingEdge'
AvtVimbaCamera_FallingEdge = 'FallingEdge'
AvtVimbaCamera_AnyEdge = 'AnyEdge'
AvtVimbaCamera_LevelHigh = 'LevelHigh'
AvtVimbaCamera_LevelLow = 'LevelLow'
AvtVimbaCamera_ModeOn = 'On'
AvtVimbaCamera_ModeOff = 'Off'
AvtVimbaCamera_FrameStart = 'FrameStart'
AvtVimbaCamera_AcquisitionStart = 'AcquisitionStart'
AvtVimbaCamera_AcquisitionEnd = 'AcquisitionEnd'
AvtVimbaCamera_AcquisitionRecord = 'AcquisitionRecord'
AvtVimbaCamera_Continuous = 'Continuous'
AvtVimbaCamera_SingleFrame = 'SingleFrame'
AvtVimbaCamera_MultiFrame = 'MultiFrame'
AvtVimbaCamera_Recorder = 'Recorder'
AvtVimbaCamera_Mono8 = 'Mono8'
AvtVimbaCamera_Mono10 = 'Mono10'
AvtVimbaCamera_Mono10Packed = 'Mono10Packed'
AvtVimbaCamera_Mono12 = 'Mono12'
AvtVimbaCamera_Mono12Packed = 'Mono12Packed'
AvtVimbaCamera_BayerGR8 = 'BayerGR8'
AvtVimbaCamera_BayerRG8 = 'BayerRG8'
AvtVimbaCamera_BayerGB8 = 'BayerGB8'
AvtVimbaCamera_BayerBG8 = 'BayerBG8'
AvtVimbaCamera_BayerGR10 = 'BayerGR10'
AvtVimbaCamera_BayerRG10 = 'BayerRG10'
AvtVimbaCamera_BayerGB10 = 'BayerGB10'
AvtVimbaCamera_BayerBG10 = 'BayerBG10'
AvtVimbaCamera_BayerGR12 = 'BayerGR12'
AvtVimbaCamera_BayerRG12 = 'BayerRG12'
AvtVimbaCamera_BayerGB12 = 'BayerGB12'
AvtVimbaCamera_BayerBG12 = 'BayerBG12'
AvtVimbaCamera_BayerGR10Packed = 'BayerGR10Packed'
AvtVimbaCamera_BayerRG10Packed = 'BayerRG10Packed'
AvtVimbaCamera_BayerGB10Packed = 'BayerGB10Packed'
AvtVimbaCamera_BayerBG10Packed = 'BayerBG10Packed'
AvtVimbaCamera_BayerGR12Packed = 'BayerGR12Packed'
AvtVimbaCamera_BayerRG12Packed = 'BayerRG12Packed'
AvtVimbaCamera_BayerGB12Packed = 'BayerGB12Packed'
AvtVimbaCamera_BayerBG12Packed = 'BayerBG12Packed'
AvtVimbaCamera_RGB8Packed = 'RGB8Packed'
AvtVimbaCamera_BGR8Packed = 'BGR8Packed'
AvtVimbaCamera_Off = 'Off'
AvtVimbaCamera_Once = 'Once'
AvtVimbaCamera_Auto = 'Continuous'
AvtVimbaCamera_Red = 'Red'
AvtVimbaCamera_Blue = 'Blue'
AvtVimbaCamera_Normal = 'Normal'
AvtVimbaCamera_Invert = 'Invert'
AvtVimbaCamera_PtpOff = 'Off'
AvtVimbaCamera_PtpSlave = 'Slave'
AvtVimbaCamera_PtpMaster = 'Master'
AvtVimbaCamera_PtpAuto = 'Auto'
AvtVimbaCamera_SyncIn1 = 'SyncIn1'
AvtVimbaCamera_SyncIn2 = 'SyncIn2'
AvtVimbaCamera_SyncIn3 = 'SyncIn3'
AvtVimbaCamera_SyncIn4 = 'SyncIn4'
AvtVimbaCamera_SyncOut1 = 'SyncOut1'
AvtVimbaCamera_SyncOut2 = 'SyncOut2'
AvtVimbaCamera_SyncOut3 = 'SyncOut3'
AvtVimbaCamera_SyncOut4 = 'SyncOut4'
AvtVimbaCamera_GPO = 'GPO'
AvtVimbaCamera_AcquisitionTriggerReady = 'AcquisitionTriggerReady'
AvtVimbaCamera_FrameTriggerReady = 'FrameTriggerReady'
AvtVimbaCamera_FrameTrigger = 'FrameTrigger'
AvtVimbaCamera_Exposing = 'Exposing'
AvtVimbaCamera_FrameReadout = 'FrameReadout'
AvtVimbaCamera_Imaging = 'Imaging'
AvtVimbaCamera_Acquiring = 'Acquiring'
AvtVimbaCamera_LineIn1 = 'LineIn1'
AvtVimbaCamera_LineIn2 = 'LineIn2'
AvtVimbaCamera_USBLine0 = 'Line0'
AvtVimbaCamera_USBLine1 = 'Line1'
AvtVimbaCamera_USBLine2 = 'Line2'
AvtVimbaCamera_USBLine3 = 'Line3'
AvtVimbaCamera_Output = 'Output'
AvtVimbaCamera_Input = 'Input'
AvtVimbaCamera_Mean = 'Mean'
AvtVimbaCamera_FitRange = 'FitRange'
AvtVimbaCamera_Timed = 'Timed'
AvtVimbaCamera_TriggerWidth = 'TriggerWidth'
AvtVimbaCamera_PieceWiseLinearHDR = 'PieceWiseLinearHDR'
